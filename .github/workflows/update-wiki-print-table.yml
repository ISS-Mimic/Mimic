name: 🛠️ Auto-refresh 3D-Print Checklist (Wiki)

on:
  # Run when any STL / 3MF in 3D_Printing/ changes…
  push:
    paths:
      - "3D_Printing/**"
  # …and once nightly as a safety-net
  schedule:
    - cron: "0 3 * * *"    # 03:00 UTC

permissions:
  contents: read            # checkout needs this
  # we’ll push to the wiki with a PAT, not this token

jobs:
  refresh:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ pull your repo so the script can see the files
    - name: Check out code
      uses: actions/checkout@v4   # official action :contentReference[oaicite:0]{index=0}

    # 2️⃣ provision Python
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    # 3️⃣ install the tiny deps
    - name: Install Python deps
      run: |
        python -m pip install --upgrade pip
        pip install PyGithub tabulate

    # 4️⃣ run the generator – it writes the markdown file
    - name: Generate checklist markdown
      run: |
        python scripts/make_print_table.py > "Build-Instruction:-3D-Printed-Parts.md"

    # 5️⃣ clone the wiki repo with the PAT
    - name: Clone wiki repo
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        git clone "https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.wiki.git" wiki
    - name: Debug GH_PAT
      run: |
        if [ -z "$GH_PAT" ]; then echo "GH_PAT is not set"; else echo "GH_PAT is set"; fi
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
    # 6️⃣ copy new file into wiki, commit & push
    - name: Update wiki page
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        python scripts/make_print_table.py > "Build-Instruction:-3D-Printed-Parts.md"
        cd wiki
        git config user.name  "Mimic-CI Bot"
        git config user.email "actions@github.com"
        git add "Build-Instruction:-3D-Printed-Parts.md"
        git commit -m "docs: auto-refresh 3D-print checklist [skip ci]" || echo "No changes"
        git push origin HEAD
