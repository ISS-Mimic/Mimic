#:kivy 2.0.0
#:import Factory kivy.factory.Factory
#:import dp kivy.metrics.dp
#:import Window kivy.core.window.Window
#:import sp kivy.metrics.sp

<PopupText@Label>:
    size_hint_y: None
    text_size: self.width - dp(16), None
    padding: dp(8), 0
    halign: 'left'
    valign: 'middle'
    color: 1, 1, 1, 1
    # Baseline 16sp at ~1200×800 window; scales with the smaller screen dimension.
    # Clamp between 14sp and 26sp so it stays readable everywhere.
    font_size: max(sp(14), min(sp(26), sp(16) * min(Window.width/1200.0, Window.height/800.0)))
    height: self.texture_size[1] + dp(12)

# Custom dropdown option styling
<CustomSpinnerOption@SpinnerOption>:
    background_color: 0.3, 0.3, 0.3, 1
    color: 1, 1, 1, 1
    font_size: self.height * 0.6  # Scale font to option height
    size_hint_y: None
    height: self.width * 0.25  # Fixed height for consistent scaling

<DescriptionPopup@Popup>:
    title: 'Recorded ISS Data Descriptions'
    size_hint: 0.8, 0.8
    auto_dismiss: True
    
    BoxLayout:
        orientation: 'vertical'
        padding: dp(12)
        spacing: dp(8)
        
        ScrollView:
            do_scroll_x: False
            do_scroll_y: True
            
            GridLayout:
                cols: 1
                size_hint_y: None
                height: self.minimum_height
                padding: dp(8), dp(8)
                spacing: dp(8)
                
                PopupText:
                    text: 'Select which data set to replay - this is all data recorded during ISS events which can be played back at higher speeds'
                
                PopupText:
                    text: 'HTV: Recorded during the visit of the Japanese HTV Cargo Spacecraft, shows the arrays in normal operations and then feathering mode to avoid the thruster plume from the HTV'

                PopupText:
                    text: 'OFT-2: Recorded during the docking of the Boeing Starliner in 2022'

                PopupText:
                    text: 'Standard: ISS in normal operations'

                PopupText:
                    text: 'Disco: press disco button for some fun'

                PopupText:
                    text: 'USB: Insert a USB drive with telemetry files in a top level folder that starts with "Telemetry" (e.g. Telemetry_19Aug2024), see files in /RecordedData for the format'
                

# If you need an image button later, define it like this and set source per instance:
# <ImageButton@ButtonBehavior+Image>:
#     allow_stretch: True
#     keep_ratio: True

<Playback_Screen>:
    name: 'playback'
    
    FloatLayout:
        Image:
            id: Playback_Background
            source: f'{root.mimic_directory}/Mimic/Pi/imgs/playback/SimulatedOrbitBackground.png'
            fit_mode: "fill"
        
        Button:
            id: popup
            text: ''
            size_hint: None, None
            size: [max(dp(36), min(min(self.parent.width, self.parent.height) * 0.08, dp(120)))] * 2
            pos_hint: {"center_x": 0.25, "center_y": 0.8}
            background_normal: ''
            background_down: ''
            background_color: 1, 0, 0, 0.3
            on_release: Factory.DescriptionPopup().open()

            Image:
                source: f'{root.mimic_directory}/Mimic/Pi/imgs/playback/InfoIcon.png'
                size_hint: None, None
                size: self.parent.size
                pos: self.parent.pos      # <-- bind to the button's position
                fit_mode: "contain"       # Kivy 2.2+

        
        Spinner:
            id: file_dropdown
            text: 'Select DATA'
            size_hint: 0.18, 0.07
            values: ['HTV', 'OFT2', 'Standard']
            on_text: root.on_dropdown_select_data(self.text)
            background_color: 0.3, 0.3, 0.3, 1  # Dark metallic look
            pos_hint: {"center_x": 0.154, "center_y": 0.5475}
            font_size: self.height * 0.5  # Scale font to button height
            # Custom dropdown popup styling
            option_cls: Factory.CustomSpinnerOption
        
        
        # ---------- MIDDLE PANEL: PLAYBACK SPEED ----------
        Spinner:
            id: speed_dropdown
            text: 'Select SPEED'
            size_hint: 0.18, 0.07
            values: ['10x', '20x', '60x', '90x']
            on_text: root.on_dropdown_select_speed(self.text)
            background_color: 0.3, 0.3, 0.3, 1  # Dark metallic look
            pos_hint: {"center_x": 0.485, "center_y": 0.5475}
            font_size: self.height * 0.5  # Scale font to button height
            # Custom dropdown popup styling
            option_cls: Factory.CustomSpinnerOption

        
        # ---------- RIGHT PANEL: DISCO MODE ----------
        Button:
            id: disco_button
            size_hint: 0.2, 0.31
            background_color: 0, 0, 0, 0  # Transparent background
            on_press: root.start_disco_mode()
            pos_hint: {"center_x": 0.807, "center_y": 0.55}
            
            canvas.before:
                Color:
                    rgba: 1, 1, 1, 0.5
                Ellipse:
                    pos: self.pos
                    size: self.size
        
        
        # ---------- MAIN PLAYBACK CONTROLS ----------
        # Green Start Button (Bottom Left)
        Button:
            id: start_button
            text: 'START'
            size_hint: 0.15, 0.1
            background_color: 0, 0.8, 0, 1  # Green
            disabled: True  # Start disabled by default
            on_press: root.start_playback()
            pos_hint: {"center_x": 0.35, "center_y": 0.235}
            font_size: self.height * 0.4  # Scale font to button height
        
        # Red Stop Button (Bottom Right)
        Button:
            text: 'STOP'
            size_hint: 0.15, 0.1
            background_color: 0.8, 0, 0, 1  # Red
            disabled: not root.is_playing
            on_press: root.stop_playback()
            pos_hint: {"center_x": 0.65, "center_y": 0.235}
            font_size: self.height * 0.4  # Scale font to button height
        
        # Loop Button (Center Bottom)
        Button:
            text: 'LOOP'
            size_hint: 0.15, 0.1
            background_color: (0.2, 0.8, 0.2, 1) if root.loop_enabled else (0.6, 0.6, 0.6, 1)
            on_press: root.toggle_loop()
            pos_hint: {"center_x": 0.49, "center_y": 0.43}
            font_size: self.height * 0.4  # Scale font to button height
        
        # ---------- STATUS DISPLAY (Bottom Rectangle) ----------
        Label:
            id: status_label
            text: 'Select Data to Playback'
            size_hint: 1, 0.07
            background_color: 0, 0, 0, 0.8  # Semi-transparent black
            color: 0, 1, 0, 1  # Green text
            font_size: self.height * 0.6  # Scale font to label height
            text_size: self.size
            halign: 'center'
            valign: 'middle'
            pos_hint: {"center_x": 0.57, "center_y": 0.07}
        
        # ---------- BOTTOM TOOLBAR ----------
        Image:
            id: signal
            source: f"{root.mimic_directory}/Mimic/Pi/imgs/signal/signalred.zip"
            size_hint_y: 0.112
            anim_delay: 0.05
            anim_loop: 0
            fit_mode: "scale-down"
            pos_hint: {"center_x": 0.05, "center_y": 0.07}
        
        Image:
            id: arduino
            source: f"{root.mimic_directory}/Mimic/Pi/imgs/signal/arduino_offline.png"
            size_hint_y: 0.15
            anim_delay: 0.2
            anim_loop: -1
            fit_mode: "scale-down"
            pos_hint: {"center_x": 0.14, "center_y": 0.08}
        
        Label:
            id: arduino_count
            pos_hint: {"center_x": 0.14, "center_y": 0.08}
            text: ''
            markup: True
            color: 1, 1, 1, 1
            font_size: self.height * 1
            size_hint: 0.06, 0.08
        
        # ─────────────────────── Navigation ────────────────────────────────

        Button:
            size_hint: 0.1, 0.11
            pos_hint: {"center_x": 0.9375, "center_y": 0.07}
            background_normal: f'{root.mimic_directory}/Mimic/Pi/imgs/eva/BackButton.png'
            background_down: f'{root.mimic_directory}/Mimic/Pi/imgs/eva/BackButton.png'
            border: 0,0,0,0    # avoid 9-slice margins
            on_release: root.manager.current = 'main'