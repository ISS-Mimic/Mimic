<Orbit_Screen>:
    name: 'orbit'
    FloatLayout:
        id: orbit_layout
        Image:
            id: Orbit_background
            source: f'{root.mimic_directory}/Mimic/Pi/imgs/orbit/OrbitBackground.png'
            fit_mode: "fill"
        Label:
            id: gmtime
            pos_hint: {"center_x": 0.95, "center_y": 0.96}
            text: '00:00:00'
            markup: True
            color: root.signalcolor
            size_hint_y: 0.4
            font_size: self.height * 0.10
        Image:
            id:orbit3d
            source: f'{root.mimic_data_directory}/globe.png'
            size_hint: 0.2,0.2
            pos_hint: {"center_x": 0.92, "center_y": 0.35}
            fit_mode: "contain"
        Image:
            id: OrbitMap
            source: f'{root.mimic_data_directory}/map.jpg'
            pos_hint: {"center_x": 0.5, "center_y": 0.56}
            size_hint_y: 0.598
            fit_mode: "contain"
        Widget:
            id: OrbitSun
            pos: (0-(self.width/2),0-(self.height/2))
            size_hint: (None, None)
            size: (50,50)
            color: (0,1,1,1)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Rectangle:
                    source: f'{root.mimic_directory}/Mimic/Pi/imgs/orbit/OrbitSun.png'
                    size: self.size
                    pos: self.pos
                PopMatrix:
        Widget:
            id: mylocation
            col: (0,0,0,0)
            pos: (0-(self.width/2),0-(self.height/2))
            size_hint: (None, None)
            size: (10,10)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Color:
                    rgba: self.col
                Ellipse:
                    pos: self.pos
                    size: self.size
                PopMatrix:
        Widget:
            id: TDRS12
            col: (0,0,0,0)
            pos: (0-(self.width/2),0-(self.height/2))
            size_hint: (None, None)
            size: (10,10)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Color:
                    rgba: self.col
                Ellipse:
                    pos: self.pos
                    size: self.size
                PopMatrix:
        Widget:
            id: TDRS12groundtrack
            col: (0,0,0,0)
            points: (0,0,100,100,200,150)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Color:
                    rgba: self.col
                Line:    # test diagonal line
                    points: self.points
                    joint: "round"
                    width: 1
                PopMatrix:
        Widget:
            id: TDRS6
            col: (0,0,0,0)
            pos: (0-(self.width/2),0-(self.height/2))
            size_hint: (None, None)
            size: (10,10)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Color:
                    rgba: self.col
                Ellipse:
                    pos: self.pos
                    size: self.size
                PopMatrix:
        Widget:
            id: TDRS6groundtrack
            col: (0,0,0,0)
            points: (0,0,100,100,200,150)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Color:
                    rgba: self.col
                Line:    # test diagonal line
                    points: self.points
                    joint: "round"
                    width: 1
                PopMatrix:
        Label:
            id: TDRSeLabel
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            text: 'TDRS-East'
            markup: True
            color: (0,0,0,0)
            font_size: self.height * 0.3
            size_hint_y: 0.2
        Widget:
            id: TDRS11
            col: (0,0,0,0)
            pos: (0-(self.width/2),0-(self.height/2))
            size_hint: (None, None)
            size: (10,10)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Color:
                    rgba: self.col
                Ellipse:
                    pos: self.pos
                    size: self.size
                PopMatrix:
        Widget:
            id: TDRS11groundtrack
            col: (0,0,0,0)
            points: (0,0,100,100,200,150)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Color:
                    rgba: self.col
                Line:    # test diagonal line
                    points: self.points
                    joint: "round"
                    width: 1
                PopMatrix:
        Widget:
            id: TDRS10
            col: (0,0,0,0)
            pos: (0-(self.width/2),0-(self.height/2))
            size_hint: (None, None)
            size: (10,10)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Color:
                    rgba: self.col
                Ellipse:
                    pos: self.pos
                    size: self.size
                PopMatrix:
        Widget:
            id: TDRS10groundtrack
            col: (0,0,0,0)
            points: (0,0,100,100,200,150)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Color:
                    rgba: self.col
                Line:    # test diagonal line
                    points: self.points
                    joint: "round"
                    width: 1
                PopMatrix:
        Label:
            id: TDRSwLabel
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            text: 'TDRS-West'
            markup: True
            color: (0,0,0,0)
            font_size: self.height * 0.3
            size_hint_y: 0.2
        Widget:
            id: ZOE
            col: (0,0,0,0)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            size_hint: '0.06dp', '0.38dp'
            opacity: 0.2
            canvas:
                Color:
                    rgba: self.col
                Ellipse:
                    pos: self.pos
                    size: self.size
        Label:
            id: ZOElabel
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            text: 'ZOE'
            markup: True
            color: (0,0,0,0)
            font_size: self.height * 0.3
            size_hint_y: 0.2
        Widget:
            id: TDRS7
            col: (1,1,1,1)
            pos: (0-(self.width/2),0-(self.height/2))
            size_hint: (None, None)
            size: (10,10)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Color:
                    rgba: self.col
                Ellipse:
                    pos: self.pos
                    size: self.size
                PopMatrix:
        Widget:
            id: TDRS7groundtrack
            col: (0,0,0,0)
            points: (0,0,100,100,200,150)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Color:
                    rgba: self.col
                Line:    # test diagonal line
                    points: self.points
                    joint: "round"
                    width: 1
                PopMatrix:
        Label:
            id: TDRSzLabel
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            text: 'TDRS-Z'
            markup: True
            color: (0,0,0,0)
            font_size: self.height * 0.3
            size_hint_y: 0.2
        Widget:
            id: ISSgroundtrack
            col: (0,0,0,0)
            points: (0,0,100,100,200,150)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Color:
                    rgba: self.col
                Line:    #Bezier looks better but is pretty slow and slightly wrong
                    points: self.points
                    joint: "round"
                    width: 1
                PopMatrix:
        Widget:
            id: ISSgroundtrack2
            col: (0,0,0,0)
            points: (0,0,100,100,200,150)
            canvas:
                PushMatrix:
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Color:
                    rgba: self.col
                Line:    #Bezier looks better but is pretty slow and slightly wrong
                    points: self.points
                    joint: "round"
                    width: 1
                PopMatrix:
        Widget:
            id: OrbitISStiny
            pos: (0-(self.width/2),0-(self.height/2))
            size_hint: (None, None)
            size: (50,50)
            color: (0,1,1,1)
            canvas:
                PushMatrix:
                Color:
                    rgba: (1,1,1,1)
                Translate:
                    xy: (OrbitMap.x + (OrbitMap.width - OrbitMap.norm_image_size[0])/2, OrbitMap.y + (OrbitMap.height - OrbitMap.norm_image_size[1])/2)
                Scale:
                    origin: 0,0
                    x: OrbitMap.norm_image_size[0] / OrbitMap.texture_size[0] if OrbitMap.texture_size[0] > 0 else 1
                    y: OrbitMap.norm_image_size[1] / OrbitMap.texture_size[1] if OrbitMap.texture_size[1] > 0 else 1
                Rectangle:
                    source: f'{root.mimic_directory}/Mimic/Pi/imgs/orbit/OrbitYellowISSicon.png'
                    size: self.size
                    pos: self.pos
                Line:
                    width: 1
                    circle: (self.center_x, self.center_y, min(self.width, self.height)/2, 0, 360, 20)
                PopMatrix:
        Label:
            id: dailyorbit
            pos_hint: {"center_x": 0.08, "center_y": 0.7}
            text: '0'
            color: 1,1,1
            font_size: self.height * 0.3
            size_hint_y: 0.2
        Label:
            id: totalorbits
            pos_hint: {"center_x": 0.08, "center_y": 0.5}
            text: '0'
            color: 1,1,1
            font_size: self.height * 0.3
            size_hint_y: 0.2
        Button:
            id: iss_pass_button
            size_hint: 0.12,0.18
            pos_hint: {"center_x": 0.92, "center_y": 0.76}
            background_normal: f'{root.mimic_directory}/Mimic/Pi/imgs/orbit/ISSpassUnlit.png'
            background_down: f'{root.mimic_directory}/Mimic/Pi/imgs/orbit/ISSpassDown.png'
            on_release: app.root.current = 'orbit_pass'
        Button:
            id: orbit_data_button
            size_hint: 0.20,.11
            pos_hint: {"center_x": 0.72, "center_y": 0.19}
            background_normal: f'{root.mimic_directory}/Mimic/Pi/imgs/orbit/OrbitDataUnlit.png'
            background_down: f'{root.mimic_directory}/Mimic/Pi/imgs/orbit/OrbitDataDown.png'
            on_release: app.root.current = 'orbit_data'
        Label:
            id: iss_next_pass1
            pos_hint: {"center_x": 0.92, "center_y": 0.6}
            text: '-----'
            halign: 'center'
            color: 1,1,1
            font_size: self.height * 0.17
            size_hint_y: 0.2
        Label:
            id: iss_next_pass2
            pos_hint: {"center_x": 0.92, "center_y": 0.55}
            text: '-----'
            halign: 'center'
            color: 1,1,1
            font_size: self.height * 0.17
            size_hint_y: 0.2
        Label:
            id: countdown
            pos_hint: {"center_x": 0.92, "center_y": 0.5}
            text: '-----'
            halign: 'center'
            color: 1,1,1
            font_size: self.height * 0.17
            size_hint_y: 0.2
        Label:
            id: ISSvisible
            pos_hint: {"center_x": 0.92, "center_y": 0.45}
            text: '---'
            halign: 'center'
            color: 1,1,1
            font_size: self.height * 0.17
            size_hint_y: 0.2
        Label:
            id: latitude
            pos_hint: {"center_x": 0.12, "center_y": 0.22}
            text: '0.00'
            color: 1,1,1
            font_size: self.height * 0.17
            size_hint_y: 0.2
        Label:
            id: longitude
            pos_hint: {"center_x": 0.13, "center_y": 0.185}
            text: '0.00'
            color: 1,1,1
            font_size: self.height * 0.17
            size_hint_y: 0.2
        Label:
            id: altitude
            pos_hint: {"center_x": 0.35, "center_y": 0.22}
            text: '0.00'
            color: 1,1,1
            font_size: self.height * 0.17
            size_hint_y: 0.2
        Label:
            id: inc
            pos_hint: {"center_x": 0.35, "center_y": 0.185}
            text: '0.00'
            color: 1,1,1
            font_size: self.height * 0.17
            size_hint_y: 0.2
        Label:
            id: solarbeta
            pos_hint: {"center_x": 0.57, "center_y": 0.22}
            text: '0.00'
            color: 1,1,1
            font_size: self.height * 0.17
            size_hint_y: 0.2
        Label:
            id: period
            pos_hint: {"center_x": 0.57, "center_y": 0.185}
            text: '0.00'
            color: 1,1,1
            font_size: self.height * 0.17
            size_hint_y: 0.2
        Image:
            id: arduino
            source: f"{root.mimic_directory}/Mimic/Pi/imgs/signal/arduino_offline.png"
            size_hint_y: 0.15
            anim_delay: 0.2
            anim_loop: 0
            pos_hint: {"center_x": 0.14, "center_y": 0.08}
            fit_mode: "scale-down"
        Label:
            id: arduino_count
            pos_hint: {"center_x": 0.14, "center_y": 0.08}
            text: ''
            markup: True
            color: 1,1,1
            font_size: self.height * 0.3
            size_hint_y: 0.5
        Button:
            size_hint: 0.1,0.11
            pos_hint: {"center_x": 0.9375, "center_y": 0.082}
            background_normal: f'{root.mimic_directory}/Mimic/Pi/imgs/eva/BackButton.png'
            on_release: app.root.current = 'mimic'
        Image:
            id: signal
            source: f"{root.mimic_directory}/Mimic/Pi/imgs/signal/pulse-transparent.zip"
            size_hint_y: 0.15
            anim_delay: 0.12
            anim_loop: 0
            pos_hint: {"center_x": 0.05, "center_y": 0.07}
            fit_mode: "scale-down"
